networks:
  metton_network:
    driver: bridge

services:
  postgres:
    image: postgres:latest
    container_name: ${PROJECT_NAME}_postgres_container
    restart: unless-stopped
    ports:
      - 5433:5432
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - metton_network

  pgloader: 
    build:
      context: .
      dockerfile: Dockerfile.pgloader
    container_name: ${PROJECT_NAME}_pgloader_container
    networks:
      - metton_network
    command: tail -f /dev/null
  
  python:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: ${PROJECT_NAME}_python_container
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/app/core/media
    ports:
      - "8000:8000"
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - metton_network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: ${PROJECT_NAME}_nginx_container
    volumes:
      - static_volume:/var/www/static
      - media_volume:/app/core/media
      - ./nginx/templates:/etc/nginx/templates
      - ./core/static:/app/core/static
    ports:
      - "${SERVER_PORT}:80"
    env_file:
      - .env
    depends_on:
      - python
    networks:
      - metton_network

  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    container_name: ${PROJECT_NAME}_rabbitmq_container
    hostname: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MGT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - metton_network

volumes:
  static_volume:
  media_volume:
  postgres_data:
  rabbitmq_data:
